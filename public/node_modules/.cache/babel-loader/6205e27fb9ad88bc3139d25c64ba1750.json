{"ast":null,"code":"var _jsxFileName = \"/Users/jay/work/cook-at-home/src/index.js\";\nimport ReactDOM from \"react-dom\";\nimport React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst CardFlip = () => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  return /*#__PURE__*/React.createElement(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"green\",\n      height: 100,\n      color: \"#fff\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"How do you define the meaning of success?\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Click to flip\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"red\",\n      height: 100,\n      color: \"#fff\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Create video tutorials on YouTube\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Click to flip\")));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(CardFlip, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/jay/work/cook-at-home/src/index.js"],"names":["ReactDOM","React","useState","ReactCardFlip","CardFlip","isFlipped","setIsFlipped","handleClick","backgroundColor","height","color","display","justifyContent","alignItems","render","document","querySelector"],"mappings":";AACA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAGA,sBACE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,SAA1B;AAAqC,IAAA,aAAa,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,eAAe,EAAE,OADZ;AAELC,MAAAA,MAAM,EAAE,GAFH;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,cAAc,EAAE,QALX;AAMLC,MAAAA,UAAU,EAAE;AANP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAWE;AAAQ,IAAA,OAAO,EAAEN,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,CADF,eAeE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,KADZ;AAELC,MAAAA,MAAM,EAAE,GAFH;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,cAAc,EAAE,QALX;AAMLC,MAAAA,UAAU,EAAE;AANP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAWE;AAAQ,IAAA,OAAO,EAAEN,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,CAfF,CADF;AA+BD,CArCD;;AAuCAP,QAAQ,CAACc,MAAT,eAAgB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA8BC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAA9B","sourcesContent":["  \nimport ReactDOM from \"react-dom\";\nimport React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst CardFlip = () => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n  return (\n    <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n      <div\n        style={{\n          backgroundColor: \"green\",\n          height: 100,\n          color: \"#fff\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        How do you define the meaning of success?\n        <button onClick={handleClick}>Click to flip</button>\n      </div>\n\n      <div\n        style={{\n          backgroundColor: \"red\",\n          height: 100,\n          color: \"#fff\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        Create video tutorials on YouTube\n        <button onClick={handleClick}>Click to flip</button>\n      </div>\n    </ReactCardFlip>\n  );\n};\n\nReactDOM.render(<CardFlip />, document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}