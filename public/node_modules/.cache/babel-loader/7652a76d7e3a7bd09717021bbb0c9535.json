{"ast":null,"code":"var _jsxFileName = \"/Users/jay/work/cook-at-home/src/Recipe.js\";\nimport React, { useState } from 'react';\nimport RecipeDetails from './RecipeDetails';\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Recipe = ({\n  recipe\n}) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const {\n    label,\n    image,\n    ingredients\n  } = recipe.recipe;\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  }; //  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">URL\n  //  </a>\n  // <p>Total Calories: {calories.toFixed(2)}</p>\n\n\n  return /*#__PURE__*/React.createElement(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, label), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"image\",\n    src: image,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Ingredients\"), show && /*#__PURE__*/React.createElement(RecipeDetails, {\n    ingredients: ingredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }\n  })));\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/jay/work/cook-at-home/src/Recipe.js"],"names":["React","useState","RecipeDetails","ReactCardFlip","Recipe","recipe","isFlipped","setIsFlipped","label","image","ingredients","handleClick","show"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAAgCL,MAAM,CAACA,MAA7C;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACtBJ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD,CAJ2B,CAO3B;AACA;AAEA;;;AAGA,sBACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,SAA1B;AAAqC,IAAA,aAAa,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,KAAL,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEC,KAA5B;AAAmC,IAAA,GAAG,EAAC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKKC,IAAI,iBAAI,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAEF,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALb,CAFJ,CADJ;AAYH,CAzBD;;AA2BA,eAAeN,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport RecipeDetails from './RecipeDetails';\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Recipe = ({ recipe }) => {\n    const [isFlipped, setIsFlipped] = useState(false);\n    const { label, image, ingredients } = recipe.recipe;\n\n    const handleClick = () => {\n        setIsFlipped(!isFlipped)\n    }\n    //  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">URL\n    //  </a>\n\n    // <p>Total Calories: {calories.toFixed(2)}</p>\n\n    \n    return(\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n\n            <div className=\"recipe\">\n                <h2>{label}</h2>\n                <img className=\"image\" src={image} alt=\"\" />\n\n                <button onClick={handleClick}>Ingredients</button>\n                {show && <RecipeDetails ingredients={ingredients} />}\n            </div>\n        </ReactCardFlip>\n    );\n}\n\nexport default Recipe"]},"metadata":{},"sourceType":"module"}